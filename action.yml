name: 'Compile Documentation'
description: 'Compile documentation with Staple'
branding:
  color: blue
  icon: file-text
inputs:
  project:
    description: 'The project to compile documentation for'
    required: true
  output:
    description: 'Where to put the documentation output'
  template:
    description: 'The Clip template to use for documentation pages'
  gh-pages:
    description: 'If set will publish the documentation to Github Pages'
outputs:
  output:
    description: 'The output directory into which the documentation was put'
    value: ${{ inputs.output }}

runs:
  using: "composite"
  steps:
    - uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'Shinmera/staple'
        file: ${{ runner.os == 'Windows' && 'staple.exe' || (runner.os == 'Linux' && 'staple.run' || 'staple.o') }}
        target: ${{ runner.temp }}/staple
    - name: Run staple
      shell: bash
      run: |
        mkdir -p "$OUTPUT"
        chmod +x ${{ runner.temp }}/staple
        ${{ runner.temp }}/staple "$PROJECT" \
          --output "$OUTPUT" \
          --template "$TEMPLATE"
      env:
        PROJECT: ${{ inputs.project || github.event.repository.name }}
        OUTPUT: ${{ inputs.output || format('{0}/staple-output/', runner.temp) }}
        TEMPLATE: ${{ inputs.template }}
    - name: Upload Github Pages Artefact
      if: ${{ inputs.gh-pages }}
      uses: actions/upload-pages-artifact@v3.0.1
      with:
        path: ${{ inputs.output || format('{0}/staple-output/', runner.temp) }}
    - name: Write to Github Pages
      if: ${{ inputs.gh-pages }}
      id: deployment
      uses: actions/deploy-pages@v4
